name: Deploy Node.js App to Vercel

on:
  push:
    branches:
      - main # Adjust to your main branch

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Detect package manager
        id: detect-package-manager
        run: |
          if [ -f "yarn.lock" ]; then
            echo "::set-output name=manager::yarn"
            echo "::set-output name=command::install"
            echo "::set-output name=cache_dependency_path::yarn.lock"
          elif [ -f "package-lock.json" ]; then
            echo "::set-output name=manager::npm"
            echo "::set-output name=command::ci"
            echo "::set-output name=cache_dependency_path::package-lock.json"
          else
            echo "::set-output name=manager::npm"
            echo "::set-output name=command::install"
            echo "::set-output name=cache_dependency_path::package.json"
          fi

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18' # Or your desired Node.js version
          cache: ${{ steps.detect-package-manager.outputs.manager }}

      - name: Cache dependencies
        uses: actions/cache@v3
        with:
          path: |
            **/node_modules
          key: ${{ runner.os }}-${{ steps.detect-package-manager.outputs.manager }}-${{ hashFiles(steps.detect-package-manager.outputs.cache_dependency_path) }}
          restore-keys: |
            ${{ runner.os }}-${{ steps.detect-package-manager.outputs.manager }}-

      - name: Install dependencies
        run: ${{ steps.detect-package-manager.outputs.manager }} ${{ steps.detect-package-manager.outputs.command }}

      - name: Build
        run: npm run build # Or your build command, adjust as needed
        env:
          NODE_ENV: production
          # Add any other environment variables required for your build process here

      - name: Deploy to Vercel
        uses: amondnet/vercel-action@v20
        with:
          vercel-token: ${{ secrets.VERCEL_TOKEN }} # Vercel project token
          vercel-org-id: ${{ secrets.VERCEL_ORG_ID }} # Vercel org id
          vercel-project-id: ${{ secrets.VERCEL_PROJECT_ID }} # Vercel project id
          github-comment: false
          scope: ${{ secrets.VERCEL_ORG_ID }}
          working-directory: . # Adjust if your project is in a subdirectory