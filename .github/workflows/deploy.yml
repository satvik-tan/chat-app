```yaml
name: Deploy Node App

on:
  push:
    branches:
      - main  # Adjust to your main branch
  pull_request:
    branches:
      - main # Adjust to your main branch

jobs:
  deploy:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [16.x, 18.x, 20.x]

    steps:
      - uses: actions/checkout@v3
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}

      - name: Install Dependencies
        run: npm install

      - name: Run Tests
        run: npm test

      - name: Build
        run: npm run build  # Adjust if your build script is different

      - name: Deploy to Vercel
        if: github.ref == 'refs/heads/main' && matrix.node-version == '20.x' # deploy only on main branch and only on the latest node version
        uses: amondnet/vercel-action@v20
        with:
          vercel-token: ${{ secrets.VERCEL_TOKEN }} # Required. Obtain from Vercel
          vercel-org-id: ${{ secrets.VERCEL_ORG_ID }} # Required. Obtain from Vercel
          vercel-project-id: ${{ secrets.VERCEL_PROJECT_ID }} # Required. Obtain from Vercel
          github-comment: true
          scope: ${{ secrets.VERCEL_ORG_ID }}
          token: ${{ secrets.GITHUB_TOKEN }} # Optional. Defaults to github token

      # Alternative: Deploy to Render
      # - name: Deploy to Render
      #   if: github.ref == 'refs/heads/main' && matrix.node-version == '20.x'
      #   uses: johnbeynon/render-deploy@v1
      #   with:
      #     service-id: ${{ secrets.RENDER_SERVICE_ID }} # Replace with your Render service ID
      #     api-key: ${{ secrets.RENDER_API_KEY }}   # Replace with your Render API key
      #     clearCache: true
```